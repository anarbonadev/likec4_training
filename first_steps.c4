
// Especificación: define los tipos de elementos que se van a usar en el modelo.
specification {

    /*
        ***** ELEMENTOS ******************************
    */

    // User [Person]
    element actor {
        style {
            color muted
        }
    }
    element system      // Software System
    element apache_camel {
        technology 'Apache Camel'
    }
    element web_service {
        technology 'Java Springboot'
    }
    element postgre_db {
        technology 'Postgre SQL'
    }
    element component   // Componentes


/*
    ***** TAGS ***********************************
*/

    tag deprecated
    tag epic-123
    tag team2


/*
    ***** TIPOS DE RELACIONES ********************
*/

    relationship async
    relationship uses
}

// Predicados compartidos globalmente.
global {

}

// Modelo: elementos de la arquitectura, jerarquía, composición y relaciones.
model {
    customer = actor 'Staff' {
        description 'Sprinter Staff'
        style {
            shape person
        }
    }

    // Structurizr DSL style:
    // <name> = softwareSystem [title] [description] [technology]
    saas = system 'Edicom Integration System' 'Sistema de integración con Edicom' 'Java' {
        // System tiene componentes
        component ui {
            description 'Nextjs application, hosted in Vercel'
            style {
                icon tech:nextjs
                shape browser
            }
        }
        apache_camel ac_orders {
            title 'ISRG Apache ORDERS'
            description '
                Recupera los pedidos pendientes de enviar,
                transforma al formato Edicom
            '
        }
        apache_camel desadv {
            title 'ISRG Apache DESADV'
            description '
                Descarga los nuevos albaranes y los envía
                a la API ISRG Edidoc
            '
        }
        apache_camel invoice {
            title 'ISRG Apache INVOICE'
            description '
                Descarga las nuevas facturas y los envía
                a la API ISRG Edidoc
            '
        }
        apache_camel pricat {
            title 'ISRG Apache PRICAT'
            description '
                Descarga los nuevos PRICAT y los envía
                a la API ISRG Edidoc
            '
        }
        web_service isrg_edidoc {
            title 'ISRG Edidoc'
            description '
                Actua como fachada de la base
                de datos ISRG Edicom DB
            '
            metadata {
                prop1 'valor1'
                prop2 '
                    apiVersion: apps/v1
                    kind: StatefulSet
                    metadata:
                        name: app-statefulset
                    spec: {}
                '
            }
        }

        postgre_db isrg_edidoc_db {
            title 'ISRG Edicom DB'
            description 'It is the isrg_edidoc_db of the system'
            style {
                icon tech:postgresql
                shape storage
            }

            component customers
            component orders
        }

        // UI fetches data from de isrg_edidoc
        ui -> isrg_edidoc 'fetches via HTTPS' {
            technology 'HTTPS'
        }

        isrg_edidoc .uses isrg_edidoc_db 'write data to'

        isrg_edidoc_db -> isrg_edidoc 'read data from'

        ac_orders -> edicom_system 'send orders to' {
            technology 'HTTPS'
        }
        ac_orders -> isrg_edidoc 'get orders from'

        desadv -> edicom_system 'get desadv from'
        desadv -> isrg_edidoc 'send desadv to'

        invoice -> edicom_system 'get invoice from'
        invoice -> isrg_edidoc 'send invoice to'

        pricat -> edicom_system 'get pricat from'
        pricat -> isrg_edidoc 'send pricat to'

    }

    // Sistemas externos
    edicom_system = system 'Edicom' {
        // External link
        link https://ediwin02.edicomgroup.com/login
    }

    // El customer utilizar el UI
    customer -> ui 'opens in browser'
    customer -> saas 'enjoys our product'
    saas -> edicom_system 'send data to Edicom' {
        navigateTo saas
    }
}

// Vistas. Con ellas podemos rederizar el modelo
views {
    // Esta vista define el nivel 1 de C4 Model - CONTEXT
    view index {
        include *

        style edicom_system {
            color muted
        }
    }

    // Esta vista define el nivel 2 de C4 Model para 
    view of saas {
        include *

        style customer{
            color muted
        }

        style edicom_system {
            color muted
        }
        autoLayout RightLeft
    }

    view of isrg_edidoc_db {
        include *
    }
}